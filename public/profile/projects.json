{
    "projects" : [
        {
            "image" : "images/projects/dnd.png",
            "title": "Dungeons and Dragons Character Creator",
            "bodyText": "- Manipulated the DOM using vanilla Javascript functions in order to create an interactive single page environment.\n - Utilized CSS in order to stylize an interesting and mobile-friendly design.\n - Fetched data from an external API to display information that aids users to make decisions in character creation.",
            "links": [
                {
                    "text": "GitHub",
                    "href": "https://github.com/fusion407/DnD-Character-Creator"
                },
                {
                    "text": "Live",
                    "href": "https://fusion407.github.io/DnD-Character-Creator/"
                }
            ],
            "tags" : [
                "HTML",
                "CSS",
                "Vanilla JavaScript"
            ]
        },
        {
            "image" : "images/projects/event-management-system.png",
            "title": "Event Management System",
            "bodyText": "- Full CRUD was implemented to allow users to utilize routes for manipulating event data.\n - Added validations in each form so data being created stays consistent with written constraints.\n - Developed with ReactJS and Ruby on Rails to create a full stack application.",
            "links": [
                {
                    "text": "GitHub",
                    "href": "https://github.com/fusion407/event-management-system"
                },
                {
                    "text": "Live",
                    "href": "https://event-management-system-qmse.onrender.com/"
                }
            ],
            "tags" : [
                "ReactJS",
                "Ruby on Rails",
                "PostgreSQL",
                "Material UI"
            ]
        },
        {
            "image" : "images/projects/roleplay-chat.png",
            "title": "Roleplay Chat",
            "bodyText": "- Implemented full authentication and authorization to ensure user security.\n - Used ActionCable to create a bi-directional communication between server and client.\n - Utilized cookies to store encrypted user data to keep the user signed in when they re-visit.",
            "links": [
                {
                    "text": "GitHub",
                    "href": "https://github.com/fusion407/Roleplay-chat"
                }
            ],
            "tags" : [
                "ReactJS",
                "Ruby on Rails",
                "Action Cable",
                "PostgreSQL"
            ]
        }
    ]
}